{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf190
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Bold;
}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red92\green38\blue153;\red63\green110\blue116;
\red28\green0\blue207;\red196\green26\blue22;\red46\green13\blue110;}
\margl1440\margr1440\vieww9620\viewh16300\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Using data \
getting data from NSDictionaries and Arrays\
\
- looking at STATUS/smilies\
\
- array\
need dictionary\
\
\
need Array of Colors\
  dictionary \
    -  color \
    - image.file.png\
       - array of faces\
          - dictionary\
            - emotion\
             - image.file.png\
\
array\
NSArray * colors = @[];\
key is alway a string\
\
trying to create faces \
- must rethink how we architect this\
1. can pass through dictionary instead of string\
\pard\tx481\pardeftab481\pardirnatural

\f1\fs20 \cf0 \CocoaLigature0 - (\cf2 void\cf0 )createFacesWithColor: (
\f2\b \cf3 NSDictionary\cf0  
\f1\b0 *)color\
\{\
    \
\}\
instead of NSString\
\
2. create a dictionary\
\pard\tx481\pardeftab481\pardirnatural
\cf4 colorDictionary\cf0  = \cf5 @\{\cf0 \
                        \cf6 @"yellow"\cf0  : \cf5 @\{\cf0 \
                                \cf6 @"image"\cf0  : \cf6 @"colors0"\cf0 ,\
                                \cf6 @"faces"\cf0   : [\cf5 @[\cf0 \
                                               \cf5 @\{\cf0 \
                                                   \cf6 @"emotion"\cf0  : \cf6 @"happy"\cf0 ,\
                                                   \cf6 @"image"\cf0  : \cf6 @"yellow0"\cf0 ,\
                                                   \cf5 \}\cf0 ,\
                                               \cf5 @\{\cf0 \
                                                   \cf6 @"emotion"\cf0  : \cf6 @"smirl"\cf0 ,\
                                                   \cf6 @"image"\cf0  : \cf6 @"yellow1"\cf0 ,\
                                                   \cf5 \}\cf0 ,\
                                               \cf5 ]\cf0  \cf7 mutableCopy\cf0 ],\
                                                \cf5 \}\cf0 ,\
                        \cf6 @"red"\cf0  : \cf5 @\{\cf0 \
                                    \cf6 @"image"\cf0  : \cf6 @"colors1"\cf0 ,\
                                    \cf6 @"faces"\cf0  : [\cf5 @[]\cf0  \cf7 mutableCopy\cf0 ],\
                                    \cf5 \}\cf0 ,\
                        \cf5 \}\cf0 ;\
\
\
to get specific key\
- (\cf2 void\cf0 )createColors\
\{\
 \cf3 NSString\cf0  * yellowKey = [\cf4 colorDictionary\cf0  \cf7 allKeys\cf0 ][\cf5 0\cf0 ];\
    \cf3 NSDictionary\cf0  * yellowColor = \cf4 colorDictionary\cf0 [yellowKey];\
    \
    \cf2 for\cf0  (\cf3 NSString\cf0  * key \cf2 in\cf0  [\cf4 colorDictionary\cf0  \cf7 allKeys\cf0 ])\
    \{\
        \cf3 NSDictionary\cf0  * color = \cf4 colorDictionary\cf0  [key];\
    \}\
    \
    \cf2 for\cf0  (\cf3 NSDictionary\cf0  * color \cf2 in\cf0  \cf4 colors\cf0 )\
    \{\
        \cf3 NSString\cf0  * imageFileName = color[\cf6 @"image"\cf0 ];\
        imageFileName = [color \cf7 objectForKey\cf0 :\cf6 @"image"\cf0 ];\
        \cf3 UIImage\cf0  * colorImage = [\cf3 UIImage\cf0  \cf7 imageNamed\cf0 :imageFileName];\
    \}\
\}\
\
\
\
can call each key value\
\
- (void) createColors\
\{\
	for (NSDictionary * color in colors)\
	\{\
		NSString * colorName = color[@\'93color\'94];\
		UIImage * imageName = [UIImage imageNamed: color[@\'93image\'94]];\
		NSArray * faces = color[@\'93faces\'94];\
		for (NSDictionary * face in faces)\
		\{\
			NSString * faceImage = face[@\'93image\'94];\
		\}\
	\}\
		\
	NSMutableDictionary * face = colors[0][@\'93faces\'94][1];  \
	Array > Dictionary > Array > Dictionary\
\
	updating \
	[face setObject:@\'93hello\'94 forKey:@\'93text\'94]\
\}}